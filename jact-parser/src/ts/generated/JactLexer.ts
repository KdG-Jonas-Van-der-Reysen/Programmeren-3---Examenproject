// Generated from Jact.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class JactLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly ID = 37;
	public static readonly INT = 38;
	public static readonly FLOAT = 39;
	public static readonly BOOL = 40;
	public static readonly STRING = 41;
	public static readonly OPERATOR = 42;
	public static readonly WS = 43;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "';'", 
                                                            "'lotzien'", 
                                                            "'('", "')'", 
                                                            "'kbentkwijt '", 
                                                            "'exporteer '", 
                                                            "'['", "']'", 
                                                            "'<'", "'>'", 
                                                            "'</'", "'h1'", 
                                                            "'h2'", "'h3'", 
                                                            "'h4'", "'h5'", 
                                                            "'h6'", "'div'", 
                                                            "'p'", "'span'", 
                                                            "' '", "'!'", 
                                                            "'.'", "'?'", 
                                                            "':'", "' = '", 
                                                            "'tzitvast'", 
                                                            "'tisvrij'", 
                                                            "'tisoud'", 
                                                            "'doenekeeriet '", 
                                                            "') {'", "'}'", 
                                                            "','", "'nummerke'", 
                                                            "'jaofnee'", 
                                                            "'tekstje'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, "ID", 
                                                             "INT", "FLOAT", 
                                                             "BOOL", "STRING", 
                                                             "OPERATOR", 
                                                             "WS" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "ID", "INT", "FLOAT", "BOOL", "STRING", "OPERATOR", 
		"WS",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, JactLexer._ATN, JactLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Jact.g4"; }

	public get literalNames(): (string | null)[] { return JactLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return JactLexer.symbolicNames; }
	public get ruleNames(): string[] { return JactLexer.ruleNames; }

	public get serializedATN(): number[] { return JactLexer._serializedATN; }

	public get channelNames(): string[] { return JactLexer.channelNames; }

	public get modeNames(): string[] { return JactLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,43,314,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,1,0,1,0,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
	4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,
	8,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,
	14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,
	1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,
	24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,
	1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,
	29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
	1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
	33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,
	1,35,1,35,1,35,1,36,4,36,251,8,36,11,36,12,36,252,1,37,4,37,256,8,37,11,
	37,12,37,257,1,38,4,38,261,8,38,11,38,12,38,262,1,38,1,38,4,38,267,8,38,
	11,38,12,38,268,1,39,1,39,1,39,1,39,1,39,3,39,276,8,39,1,40,1,40,5,40,280,
	8,40,10,40,12,40,283,9,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,3,41,306,8,
	41,1,42,4,42,309,8,42,11,42,12,42,310,1,42,1,42,1,281,0,43,1,1,3,2,5,3,
	7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
	17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
	29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,
	41,83,42,85,43,1,0,5,2,0,65,90,97,122,1,0,48,57,4,0,37,37,42,43,45,45,47,
	47,2,0,60,60,62,62,3,0,9,10,13,13,32,32,330,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
	1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
	0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
	0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
	0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
	0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
	0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
	0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,
	0,83,1,0,0,0,0,85,1,0,0,0,1,87,1,0,0,0,3,89,1,0,0,0,5,97,1,0,0,0,7,99,1,
	0,0,0,9,101,1,0,0,0,11,113,1,0,0,0,13,124,1,0,0,0,15,126,1,0,0,0,17,128,
	1,0,0,0,19,130,1,0,0,0,21,132,1,0,0,0,23,135,1,0,0,0,25,138,1,0,0,0,27,
	141,1,0,0,0,29,144,1,0,0,0,31,147,1,0,0,0,33,150,1,0,0,0,35,153,1,0,0,0,
	37,157,1,0,0,0,39,159,1,0,0,0,41,164,1,0,0,0,43,166,1,0,0,0,45,168,1,0,
	0,0,47,170,1,0,0,0,49,172,1,0,0,0,51,174,1,0,0,0,53,178,1,0,0,0,55,187,
	1,0,0,0,57,195,1,0,0,0,59,202,1,0,0,0,61,216,1,0,0,0,63,220,1,0,0,0,65,
	222,1,0,0,0,67,224,1,0,0,0,69,233,1,0,0,0,71,241,1,0,0,0,73,250,1,0,0,0,
	75,255,1,0,0,0,77,260,1,0,0,0,79,275,1,0,0,0,81,277,1,0,0,0,83,305,1,0,
	0,0,85,308,1,0,0,0,87,88,5,59,0,0,88,2,1,0,0,0,89,90,5,108,0,0,90,91,5,
	111,0,0,91,92,5,116,0,0,92,93,5,122,0,0,93,94,5,105,0,0,94,95,5,101,0,0,
	95,96,5,110,0,0,96,4,1,0,0,0,97,98,5,40,0,0,98,6,1,0,0,0,99,100,5,41,0,
	0,100,8,1,0,0,0,101,102,5,107,0,0,102,103,5,98,0,0,103,104,5,101,0,0,104,
	105,5,110,0,0,105,106,5,116,0,0,106,107,5,107,0,0,107,108,5,119,0,0,108,
	109,5,105,0,0,109,110,5,106,0,0,110,111,5,116,0,0,111,112,5,32,0,0,112,
	10,1,0,0,0,113,114,5,101,0,0,114,115,5,120,0,0,115,116,5,112,0,0,116,117,
	5,111,0,0,117,118,5,114,0,0,118,119,5,116,0,0,119,120,5,101,0,0,120,121,
	5,101,0,0,121,122,5,114,0,0,122,123,5,32,0,0,123,12,1,0,0,0,124,125,5,91,
	0,0,125,14,1,0,0,0,126,127,5,93,0,0,127,16,1,0,0,0,128,129,5,60,0,0,129,
	18,1,0,0,0,130,131,5,62,0,0,131,20,1,0,0,0,132,133,5,60,0,0,133,134,5,47,
	0,0,134,22,1,0,0,0,135,136,5,104,0,0,136,137,5,49,0,0,137,24,1,0,0,0,138,
	139,5,104,0,0,139,140,5,50,0,0,140,26,1,0,0,0,141,142,5,104,0,0,142,143,
	5,51,0,0,143,28,1,0,0,0,144,145,5,104,0,0,145,146,5,52,0,0,146,30,1,0,0,
	0,147,148,5,104,0,0,148,149,5,53,0,0,149,32,1,0,0,0,150,151,5,104,0,0,151,
	152,5,54,0,0,152,34,1,0,0,0,153,154,5,100,0,0,154,155,5,105,0,0,155,156,
	5,118,0,0,156,36,1,0,0,0,157,158,5,112,0,0,158,38,1,0,0,0,159,160,5,115,
	0,0,160,161,5,112,0,0,161,162,5,97,0,0,162,163,5,110,0,0,163,40,1,0,0,0,
	164,165,5,32,0,0,165,42,1,0,0,0,166,167,5,33,0,0,167,44,1,0,0,0,168,169,
	5,46,0,0,169,46,1,0,0,0,170,171,5,63,0,0,171,48,1,0,0,0,172,173,5,58,0,
	0,173,50,1,0,0,0,174,175,5,32,0,0,175,176,5,61,0,0,176,177,5,32,0,0,177,
	52,1,0,0,0,178,179,5,116,0,0,179,180,5,122,0,0,180,181,5,105,0,0,181,182,
	5,116,0,0,182,183,5,118,0,0,183,184,5,97,0,0,184,185,5,115,0,0,185,186,
	5,116,0,0,186,54,1,0,0,0,187,188,5,116,0,0,188,189,5,105,0,0,189,190,5,
	115,0,0,190,191,5,118,0,0,191,192,5,114,0,0,192,193,5,105,0,0,193,194,5,
	106,0,0,194,56,1,0,0,0,195,196,5,116,0,0,196,197,5,105,0,0,197,198,5,115,
	0,0,198,199,5,111,0,0,199,200,5,117,0,0,200,201,5,100,0,0,201,58,1,0,0,
	0,202,203,5,100,0,0,203,204,5,111,0,0,204,205,5,101,0,0,205,206,5,110,0,
	0,206,207,5,101,0,0,207,208,5,107,0,0,208,209,5,101,0,0,209,210,5,101,0,
	0,210,211,5,114,0,0,211,212,5,105,0,0,212,213,5,101,0,0,213,214,5,116,0,
	0,214,215,5,32,0,0,215,60,1,0,0,0,216,217,5,41,0,0,217,218,5,32,0,0,218,
	219,5,123,0,0,219,62,1,0,0,0,220,221,5,125,0,0,221,64,1,0,0,0,222,223,5,
	44,0,0,223,66,1,0,0,0,224,225,5,110,0,0,225,226,5,117,0,0,226,227,5,109,
	0,0,227,228,5,109,0,0,228,229,5,101,0,0,229,230,5,114,0,0,230,231,5,107,
	0,0,231,232,5,101,0,0,232,68,1,0,0,0,233,234,5,106,0,0,234,235,5,97,0,0,
	235,236,5,111,0,0,236,237,5,102,0,0,237,238,5,110,0,0,238,239,5,101,0,0,
	239,240,5,101,0,0,240,70,1,0,0,0,241,242,5,116,0,0,242,243,5,101,0,0,243,
	244,5,107,0,0,244,245,5,115,0,0,245,246,5,116,0,0,246,247,5,106,0,0,247,
	248,5,101,0,0,248,72,1,0,0,0,249,251,7,0,0,0,250,249,1,0,0,0,251,252,1,
	0,0,0,252,250,1,0,0,0,252,253,1,0,0,0,253,74,1,0,0,0,254,256,7,1,0,0,255,
	254,1,0,0,0,256,257,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,76,1,0,
	0,0,259,261,7,1,0,0,260,259,1,0,0,0,261,262,1,0,0,0,262,260,1,0,0,0,262,
	263,1,0,0,0,263,264,1,0,0,0,264,266,5,46,0,0,265,267,7,1,0,0,266,265,1,
	0,0,0,267,268,1,0,0,0,268,266,1,0,0,0,268,269,1,0,0,0,269,78,1,0,0,0,270,
	271,5,106,0,0,271,276,5,97,0,0,272,273,5,110,0,0,273,274,5,101,0,0,274,
	276,5,101,0,0,275,270,1,0,0,0,275,272,1,0,0,0,276,80,1,0,0,0,277,281,5,
	34,0,0,278,280,9,0,0,0,279,278,1,0,0,0,280,283,1,0,0,0,281,282,1,0,0,0,
	281,279,1,0,0,0,282,284,1,0,0,0,283,281,1,0,0,0,284,285,5,34,0,0,285,82,
	1,0,0,0,286,306,7,2,0,0,287,288,5,61,0,0,288,306,5,61,0,0,289,290,5,33,
	0,0,290,306,5,61,0,0,291,306,7,3,0,0,292,293,5,60,0,0,293,306,5,61,0,0,
	294,295,5,62,0,0,295,306,5,61,0,0,296,297,5,38,0,0,297,306,5,38,0,0,298,
	299,5,124,0,0,299,306,5,124,0,0,300,306,5,33,0,0,301,302,5,43,0,0,302,306,
	5,43,0,0,303,304,5,45,0,0,304,306,5,45,0,0,305,286,1,0,0,0,305,287,1,0,
	0,0,305,289,1,0,0,0,305,291,1,0,0,0,305,292,1,0,0,0,305,294,1,0,0,0,305,
	296,1,0,0,0,305,298,1,0,0,0,305,300,1,0,0,0,305,301,1,0,0,0,305,303,1,0,
	0,0,306,84,1,0,0,0,307,309,7,4,0,0,308,307,1,0,0,0,309,310,1,0,0,0,310,
	308,1,0,0,0,310,311,1,0,0,0,311,312,1,0,0,0,312,313,6,42,0,0,313,86,1,0,
	0,0,9,0,252,257,262,268,275,281,305,310,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!JactLexer.__ATN) {
			JactLexer.__ATN = new ATNDeserializer().deserialize(JactLexer._serializedATN);
		}

		return JactLexer.__ATN;
	}


	static DecisionsToDFA = JactLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}